/**
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrganizationDocumentDetailsDto.h
 *
 * 
 */

#ifndef MYDATAMYCONSENT_MODELS_OrganizationDocumentDetailsDto_H_
#define MYDATAMYCONSENT_MODELS_OrganizationDocumentDetailsDto_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace mydatamyconsent {
namespace models {


/// <summary>
/// 
/// </summary>
class  OrganizationDocumentDetailsDto
    : public ModelBase
{
public:
    OrganizationDocumentDetailsDto();
    virtual ~OrganizationDocumentDetailsDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrganizationDocumentDetailsDto members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getOrganizationId() const;
    bool organizationIdIsSet() const;
    void unsetOrganizationId();

    void setOrganizationId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getOrganizationName() const;
    bool organizationNameIsSet() const;
    void unsetOrganizationName();

    void setOrganizationName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRTypeId() const;
    bool rTypeIdIsSet() const;
    void unsetr_typeId();

    void setRTypeId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRTypeName() const;
    bool rTypeNameIsSet() const;
    void unsetr_typeName();

    void setRTypeName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getIdentifier() const;
    bool identifierIsSet() const;
    void unsetIdentifier();

    void setIdentifier(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStorageUrl() const;
    bool storageUrlIsSet() const;
    void unsetStorageUrl();

    void setStorageUrl(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCountryIso2() const;
    bool countryIso2IsSet() const;
    void unsetCountryIso2();

    void setCountryIso2(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getIssuerId() const;
    bool issuerIdIsSet() const;
    void unsetIssuerId();

    void setIssuerId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getIssuerName() const;
    bool issuerNameIsSet() const;
    void unsetIssuerName();

    void setIssuerName(const utility::string_t& value);


protected:
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_OrganizationId;
    bool m_OrganizationIdIsSet;
    utility::string_t m_OrganizationName;
    bool m_OrganizationNameIsSet;
    utility::string_t m_r_typeId;
    bool m_r_typeIdIsSet;
    utility::string_t m_r_typeName;
    bool m_r_typeNameIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Identifier;
    bool m_IdentifierIsSet;
    utility::string_t m_StorageUrl;
    bool m_StorageUrlIsSet;
    utility::string_t m_CountryIso2;
    bool m_CountryIso2IsSet;
    utility::string_t m_IssuerId;
    bool m_IssuerIdIsSet;
    utility::string_t m_IssuerName;
    bool m_IssuerNameIsSet;
};


}
}

#endif /* MYDATAMYCONSENT_MODELS_OrganizationDocumentDetailsDto_H_ */
