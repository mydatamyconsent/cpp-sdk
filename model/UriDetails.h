/**
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UriDetails.h
 *
 * 
 */

#ifndef MYDATAMYCONSENT_MODELS_UriDetails_H_
#define MYDATAMYCONSENT_MODELS_UriDetails_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace mydatamyconsent {
namespace models {


/// <summary>
/// 
/// </summary>
class  UriDetails
    : public ModelBase
{
public:
    UriDetails();
    virtual ~UriDetails();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UriDetails members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAadhaar() const;
    bool aadhaarIsSet() const;
    void unsetAadhaar();

    void setAadhaar(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUri() const;
    bool uriIsSet() const;
    void unsetUri();

    void setUri(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDocType() const;
    bool docTypeIsSet() const;
    void unsetDocType();

    void setDocType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDocName() const;
    bool docNameIsSet() const;
    void unsetDocName();

    void setDocName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDocId() const;
    bool docIdIsSet() const;
    void unsetDocId();

    void setDocId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getIssuedOn() const;
    bool issuedOnIsSet() const;
    void unsetIssuedOn();

    void setIssuedOn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getValidFrom() const;
    bool validFromIsSet() const;
    void unsetValidFrom();

    void setValidFrom(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getValidTo() const;
    bool validToIsSet() const;
    void unsetValidTo();

    void setValidTo(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTimestamp() const;
    bool timestampIsSet() const;
    void unsetTimestamp();

    void setTimestamp(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAction() const;
    bool actionIsSet() const;
    void unsetAction();

    void setAction(const utility::string_t& value);


protected:
    utility::string_t m_Aadhaar;
    bool m_AadhaarIsSet;
    utility::string_t m_Uri;
    bool m_UriIsSet;
    utility::string_t m_DocType;
    bool m_DocTypeIsSet;
    utility::string_t m_DocName;
    bool m_DocNameIsSet;
    utility::string_t m_DocId;
    bool m_DocIdIsSet;
    utility::string_t m_IssuedOn;
    bool m_IssuedOnIsSet;
    utility::string_t m_ValidFrom;
    bool m_ValidFromIsSet;
    utility::string_t m_ValidTo;
    bool m_ValidToIsSet;
    utility::string_t m_Timestamp;
    bool m_TimestampIsSet;
    utility::string_t m_Action;
    bool m_ActionIsSet;
};


}
}

#endif /* MYDATAMYCONSENT_MODELS_UriDetails_H_ */
