/**
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SharedWith.h
 *
 * 
 */

#ifndef MYDATAMYCONSENT_MODELS_SharedWith_H_
#define MYDATAMYCONSENT_MODELS_SharedWith_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace mydatamyconsent {
namespace models {


/// <summary>
/// 
/// </summary>
class  SharedWith
    : public ModelBase
{
public:
    SharedWith();
    virtual ~SharedWith();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SharedWith members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getReceiverId() const;
    bool receiverIdIsSet() const;
    void unsetReceiverId();

    void setReceiverId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getContactNumber() const;
    bool contactNumberIsSet() const;
    void unsetContactNumber();

    void setContactNumber(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProfileUrl() const;
    bool profileUrlIsSet() const;
    void unsetProfileUrl();

    void setProfileUrl(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getExpiresAtUtc() const;
    bool expiresAtUtcIsSet() const;
    void unsetExpiresAtUtc();

    void setExpiresAtUtc(const utility::datetime& value);


protected:
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_ReceiverId;
    bool m_ReceiverIdIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_ContactNumber;
    bool m_ContactNumberIsSet;
    utility::string_t m_ProfileUrl;
    bool m_ProfileUrlIsSet;
    utility::datetime m_ExpiresAtUtc;
    bool m_ExpiresAtUtcIsSet;
};


}
}

#endif /* MYDATAMYCONSENT_MODELS_SharedWith_H_ */
