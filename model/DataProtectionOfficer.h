/**
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DataProtectionOfficer.h
 *
 * 
 */

#ifndef MYDATAMYCONSENT_MODELS_DataProtectionOfficer_H_
#define MYDATAMYCONSENT_MODELS_DataProtectionOfficer_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace mydatamyconsent {
namespace models {


/// <summary>
/// 
/// </summary>
class  DataProtectionOfficer
    : public ModelBase
{
public:
    DataProtectionOfficer();
    virtual ~DataProtectionOfficer();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DataProtectionOfficer members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmail() const;
    bool emailIsSet() const;
    void unsetEmail();

    void setEmail(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPhoneNumber() const;
    bool phoneNumberIsSet() const;
    void unsetPhoneNumber();

    void setPhoneNumber(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWebsite() const;
    bool websiteIsSet() const;
    void unsetWebsite();

    void setWebsite(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPostalAddress() const;
    bool postalAddressIsSet() const;
    void unsetPostalAddress();

    void setPostalAddress(const utility::string_t& value);


protected:
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Email;
    bool m_EmailIsSet;
    utility::string_t m_PhoneNumber;
    bool m_PhoneNumberIsSet;
    utility::string_t m_Website;
    bool m_WebsiteIsSet;
    utility::string_t m_PostalAddress;
    bool m_PostalAddressIsSet;
};


}
}

#endif /* MYDATAMYCONSENT_MODELS_DataProtectionOfficer_H_ */
