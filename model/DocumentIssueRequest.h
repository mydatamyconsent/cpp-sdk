/**
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DocumentIssueRequest.h
 *
 * 
 */

#ifndef MYDATAMYCONSENT_MODELS_DocumentIssueRequest_H_
#define MYDATAMYCONSENT_MODELS_DocumentIssueRequest_H_


#include "ModelBase.h"

#include "model/AnyType.h"
#include <cpprest/details/basic_types.h>
#include "model/Receiver.h"

namespace mydatamyconsent {
namespace models {


/// <summary>
/// 
/// </summary>
class  DocumentIssueRequest
    : public ModelBase
{
public:
    DocumentIssueRequest();
    virtual ~DocumentIssueRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DocumentIssueRequest members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDocumentTypeId() const;
    bool documentTypeIdIsSet() const;
    void unsetDocumentTypeId();

    void setDocumentTypeId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDocumentIdentifier() const;
    bool documentIdentifierIsSet() const;
    void unsetDocumentIdentifier();

    void setDocumentIdentifier(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Receiver> getReceiver() const;
    bool receiverIsSet() const;
    void unsetReceiver();

    void setReceiver(const std::shared_ptr<Receiver>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getExpiresAtUtc() const;
    bool expiresAtUtcIsSet() const;
    void unsetExpiresAtUtc();

    void setExpiresAtUtc(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBase64PdfDocument() const;
    bool base64PdfDocumentIsSet() const;
    void unsetBase64PdfDocument();

    void setBase64PdfDocument(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<AnyType> getMetadata() const;
    bool metadataIsSet() const;
    void unsetMetadata();

    void setMetadata(const std::shared_ptr<AnyType>& value);


protected:
    utility::string_t m_DocumentTypeId;
    bool m_DocumentTypeIdIsSet;
    utility::string_t m_DocumentIdentifier;
    bool m_DocumentIdentifierIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    std::shared_ptr<Receiver> m_Receiver;
    bool m_ReceiverIsSet;
    utility::datetime m_ExpiresAtUtc;
    bool m_ExpiresAtUtcIsSet;
    utility::string_t m_Base64PdfDocument;
    bool m_Base64PdfDocumentIsSet;
    std::shared_ptr<AnyType> m_Metadata;
    bool m_MetadataIsSet;
};


}
}

#endif /* MYDATAMYCONSENT_MODELS_DocumentIssueRequest_H_ */
