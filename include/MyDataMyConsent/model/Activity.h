/**
 * My Data My Consent - Developer API
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.0.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Activity.h
 *
 * 
 */

#ifndef MYDATAMYCONSENT_MODELS_Activity_H_
#define MYDATAMYCONSENT_MODELS_Activity_H_


#include "MyDataMyConsent/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace mydatamyconsent {
namespace models {


/// <summary>
/// 
/// </summary>
class  Activity
    : public ModelBase
{
public:
    Activity();
    virtual ~Activity();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Activity members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getActorName() const;
    bool actorNameIsSet() const;
    void unsetActorName();

    void setActorName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getActorProfileUrl() const;
    bool actorProfileUrlIsSet() const;
    void unsetActorProfileUrl();

    void setActorProfileUrl(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getDateTimeUtc() const;
    bool dateTimeUtcIsSet() const;
    void unsetDateTimeUtc();

    void setDateTimeUtc(const utility::datetime& value);


protected:
    utility::string_t m_ActorName;
    bool m_ActorNameIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    utility::string_t m_ActorProfileUrl;
    bool m_ActorProfileUrlIsSet;
    utility::datetime m_DateTimeUtc;
    bool m_DateTimeUtcIsSet;
};


}
}

#endif /* MYDATAMYCONSENT_MODELS_Activity_H_ */
